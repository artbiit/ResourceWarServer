syntax = "proto3";

package inGame;

import "data.proto";

// 초기 정보 동기화
message S2CInitialNoti {
    repeated data.PlayerInitialData playerInitialData = 1; // 플레이어 초기 정보
}
  
// 플레이어 상태 동기화
message S2CSyncPlayersNoti {
    repeated data.PlayerState playerStates = 1;
}

// 용광로 상태 동기화
message S2CSyncFurnaceStateNoti {
    uint8 teamIndex = 1;
    uint8 furnaceStateCode = 2;
    float progress = 3; // 백분율
}

// 제제소 상태 동기화
message S2CSawmillStatusNoti {
    uint8 teamIndex = 1;
    uint8 sawmillStateCode = 2;
    float progress = 3; // 백분율
}

// 제작소 상태 동기화
message S2CWorkbenchStatusNoti {
    uint8 teamIndex = 1;
    uint8 workbenchStateCode = 2;
    float progress = 3; // 백분율
}  

// 플레이어 액션 요청
 message C2SPlayerActionReq {
    uint8 actionType = 1;
    uint32 targetObjectId = 2; // 행동 대상
}
  
// 플레이어 액션 결과
message S2CPlayerActionRes {
    uint8 actionType = 1;
    uint32 targetObjectId = 2;
    bool success = 3;
}
  
// 객체 스폰 알림 
message S2CSpawnObjectNoti {
    uint32 objectId = 1;
    uint8 objectType = 2; // 구조물, 유닛
    uint8 areaType = 3; // 전장, 채굴장, 벌목장, 사냥터
    Position position = 4;
}

// 객체 파괴 알림
message C2SDestoryObjectReq {
    uint32 objectId = 1;
    uint8 objectType = 2;
    uint8 areaType = 3; // 전장, 채굴장, 벌목장, 사냥터 (검증 용)
}

message S2CDestoryObjectNoti {
    uint32 objectId = 1;
    uint8 objectType = 2;
    uint8 areaType = 3; // 전장, 채굴장, 벌목장, 사냥터 (검증 용)
}

// 전장 유닛 동기화 (변동사항만 보냄)
message S2CSyncFieldUnitNoti {
    repeated data.FieldUnit Object = 1;
}

// 항복
message C2SSurrenderReq {
    // 두명이 동의해야 항복이 되게할지말지
}

// 자기 자신에게 알리기
message S2CSurrenderRes {
    uint8 surrenderResultCode = 1;
    timestamp surrenderStartTime = 2;
}

// 팀 항복투표를 했다.
message S2CSurrenderNoti {
    uint32 playerId = 1;
    timestamp surrenderStartTime = 2;
}

// 게임 종료 (게임 진행을 우리가 하고 있기 때문에 서버에서 먼저 보내줌)
message S2CGameOverNoti {
    uint8 gameOverType = 1; //(어떠한 사유로 게임이 끝났는지)
    uint8 teamIndex = 2;
}
  
// 공용맵 이동
message C2SMoveToAreaMapReq {
    uint8 currentAreaType = 1; 
    uint8 destinationAreaType = 2;
}

message S2CMoveToAreaMap {
    uint8 joinMapResultCode = 1;
    Position position = 2;
}
  
// 조합대 요청 (철 100, 단단한 목재도 100개, 핵도 100개)
message C2SWorkbenchReq {
    uint32 resultItem = 1;
}
  
message S2CWorkbenchRes {
    uint8 workbenchResultCode = 1;
}

// 용광로
message C2SFurnaceReq {
    ItemData item = 1;
}
  
message S2CFurnaceRes {
    uint8 furnaceResultCode = 1;
}

// 제제소
message C2SSawmillReq {
    ItemData item = 1;
}
  
message S2CSawmillRes {
    uint8 sawmillResultCode = 1;
}
